#include "graph.hpp"

int main() {
    Graph g;
    Matrix m(8, 8);
    g.add_vertices(0);
    g.add_vertices(1);
    g.add_vertices(2);
    g.add_vertices(3);
    g.add_vertices(4);
    g.add_vertices(5);
    g.add_vertices(6);
    g.add_vertices(7);
    g.add_edge(0, 1, 5.6);
    g.add_edge(0, 2, 7.3);
    g.add_edge(0, 3, 8.9);
    g.add_edge(1, 0, 4.9);
    g.add_edge(1, 4, 2.02);
    g.add_edge(1, 5, 10.45);
    g.add_edge(2, 0, 7.3);
    g.add_edge(2, 6, 1.1);
    g.add_edge(5, 1, 10.6);
    g.add_edge(5, 7, 4.9);
    g.add_edge(6, 2, 1.19);
    g.add_edge(6, 7, 6.7);
    g.add_edge(7, 3, 6.90);
    g.add_edge(7, 4, 11.5);
    g.add_edge(7, 5, 9.8);
    g.add_edge(7, 6, 4.78);
    g.printvector();
    g.printgraphviz2();
    g.dfs();
    m.addarrete(0, 1, 5.6);
    m.addarrete(0, 2, 7.3);
    m.addarrete(0, 3, 8.9);
    m.addarrete(1, 0, 4.9);
    m.addarrete(1, 4, 2.02);
    m.addarrete(1, 5, 10.45);
    m.addarrete(2, 0, 7.3);
    m.addarrete(2, 6, 1.1);
    m.addarrete(5, 1, 10.6);
    m.addarrete(5, 7, 4.9);
    m.addarrete(6, 2, 1.19);
    m.addarrete(6, 7, 6.7);
    m.addarrete(7, 3, 6.90);
    m.addarrete(7, 4, 11.5);
    m.addarrete(7, 5, 9.8);
    m.addarrete(7, 6, 4.78);
    m.PrintMatrice();
    
    Matrix A = m.PCC();
    A.PrintMatrice();
    //g.print();
    //g.shortestPath(0);
    //g.printShortestPath(0);
    Matrix m1 ("ex0.gr");
    m1.PrintMatrice();
    Matrix A1 = m1.PCC();
    cout << endl;
    cout << A1 << endl;
    return 0;
}